{"version":3,"sources":["components/card/Card.js","components/card/CardList.jsx","components/Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","Searchbox","filter","placeholder","type","onChange","App","search","e","setState","searchParam","target","value","state","fetch","then","response","json","users","this","filterMonsters","toLocaleLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAaA,EAAQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,aAAiDC,IAAI,YAC7D,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCHXC,EAAW,SAACC,GACrB,OACG,qBAAKP,UAAU,YAAf,SAEQO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQG,UCJpDQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,YAAV,OACrB,mCACI,uBAAOC,KAAK,SAASb,UAAU,SAASY,YAAaA,EAAaE,SAAUH,QC8DrEI,E,kDA3Db,aAAe,IAAD,8BACZ,gBAgBFC,OAAS,SAACC,GACR,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXd,SAAU,GAEVW,YAAa,IANH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO1C,WACE,MAA8BC,KAAKN,MAA9Bd,EAAL,EAAKA,SAAUW,EAAf,EAAeA,YACXU,EAAiBrB,EAASG,QAAO,SAAAZ,GAAO,OAAIA,EAAQK,KAAK0B,oBAAoBC,SAASZ,EAAYW,wBAEtG,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,OAAQiB,KAAKZ,OAAQJ,YAAY,sBAC5C,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BVG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ecc5863.chunk.js","sourcesContent":["export const Card =  ({monster}) => {\n    return (\n        <div className='card-container'>\n            <img src={`https://robohash.org/${monster.id}?set=set2`} alt='monster' />\n            <h2>{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n    )\n}","import { Card } from \"./Card\"\n\nexport const CardList = (props) => {\n    return (\n       <div className='card-list'>\n           {\n               props.monsters.map(monster => (<Card key={monster.id} monster = {monster} />))\n           }\n       </div>\n    )\n}","\n\nexport const Searchbox = ({filter, placeholder}) => (\n    <>\n        <input type=\"search\" className='search' placeholder={placeholder} onChange={filter} />\n    </>\n)","import React, { Component } from 'react'\nimport {CardList} from './components/card/CardList'\nimport './App.css';\nimport { Searchbox } from './components/Searchbox';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n      ],\n      searchParam: ''\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  search = (e) => {\n    this.setState({searchParam: e.target.value})\n  }\n\n  render() {\n    let {monsters, searchParam} = this.state;\n    let filterMonsters = monsters.filter(monster => monster.name.toLocaleLowerCase().includes(searchParam.toLocaleLowerCase()));\n    \n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <Searchbox filter={this.search} placeholder=\"Search monster...\" />\n        <CardList monsters={filterMonsters}/>\n      </div>\n    )\n  }\n\n\n}\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}